#syntax=docker/dockerfile:1.12

# Build stage for Go backend
FROM --platform=$BUILDPLATFORM golang:1.23.4-alpine AS go-builder
WORKDIR /app

# Copy Go dependencies files
COPY go.mod go.sum ./
RUN go mod download

# Copy the Go source code and other necessary files
COPY *.go ./
COPY migrations/ migrations/
COPY internal/ internal/
RUN apk --no-cache add build-base

# Set Golang build envs based on Docker platform string
ARG TARGETPLATFORM
RUN <<EOT
  set -eux
  case "$TARGETPLATFORM" in
    'linux/amd64') export GOARCH=amd64 ;;
    'linux/arm/v6') export GOARCH=arm GOARM=6 ;;
    'linux/arm/v7') export GOARCH=arm GOARM=7 ;;
    'linux/arm64') export GOARCH=arm64 ;;
    *) echo "Unsupported target: $TARGETPLATFORM" && exit 1 ;;
  esac
  export CGO_ENABLED=1
  go build -o portfolio -ldflags='-w -s' -trimpath -tags disable_automigrate
EOT

# React frontend build stage
FROM --platform=$BUILDPLATFORM node:22.8.0-alpine AS node-builder
WORKDIR /app

COPY frontend/package.json frontend/package-lock.json frontend/.npmrc ./
RUN npm ci

COPY frontend/ ./
RUN npm run build

# Runtime stage
FROM alpine:3.20 AS backend
WORKDIR /app

# Install necessary system dependencies
RUN apk add --no-cache tzdata

# Create a non-root user for running the app
ARG USERNAME=portfolio
ARG UID=1000
ARG GID=$UID
RUN addgroup -g "$GID" "$USERNAME" \
    && adduser -S -u "$UID" -G "$USERNAME" "$USERNAME" \
    && mkdir pb_data && chown 1000:1000 -R pb_data

# Copy the built Go binary from the builder stage
COPY --from=go-builder /app/portfolio /app/portfolio

# Ensure the binary is executable
RUN chmod +x /app/portfolio

# Switch to the non-root user
USER $USERNAME

# Expose port 8090 for backend
EXPOSE 8090

# Default CMD serves from /data, but we will override this in docker-compose
CMD ["./portfolio", "serve", "--http=0.0.0.0:8090", "--dir=/data"]

FROM backend AS all-in-one

# Switch back to root temporarily to ensure correct permissions on public dir
USER root

COPY --from=node-builder /app/dist ./public
# Ensure the non-root user owns the public directory
RUN chown -R $UID:$GID /app/public

# Switch back to the non-root user
USER $USERNAME
